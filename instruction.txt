TestTask-CTF - вариант выполнения тестового задания, программа для сортировки слиянием нескольких файлов.

Для запуска приложения необходимо чтобы был установлен maven (на моей машине установлена верисия 3.6). Далее:
	-В корневой папке проекта (где лежит pom.xml),запустить командную строку, либо запустить командную 
	 строку любым другим способом и переместиться в корневой каталог проекта с помощью 
	 команды 'cd [путь к корневой папке проекта]'
	-выполнить комманду "mvn package"
	-запустить программу с помощью 'mvn exec:java -Dexec.args="[параметры запуска]"'
	 где "[параметры запуска]" - набор параметров для правильной работы программы указываемых через пробел:
		1. режим сортировки (-a или -d), необязательный, по умолчанию сортируем по возрастанию;
		2. тип данных (-s или -i), обязательный;
		3. имя выходного файла, обязательное;
		4. остальные параметры – имена входных файлов, не менее одного.
	 пример команды для запуска: mvn exec:java -Dexec.args="-s out.txt one.txt two.txt"
	 эта команда запустит приложение в режиме сортировки файлов со строковыми данными, в прямом порядке (по возростанию),
	 файл в который будут записаны результаты: 'out.txt; файлы содержащие исходные данные 'one.txt' и 'two.txt'

Програма в ходе выполнения проверит отсортированы ли исходные файлы, если нет, то  при обработке каждого файла пользователю будет 
предложено отсортировать файл, оставить его без изменений, выйти из программы. 

	Важно: при сортировке исходные файлы не изменяются,программа создаёт временные файлы, которые автоматически удаляются 
	после завершения программы.
	Важно: сортировка больших файлов может занять продолжительное время и потребовать много дополнительного места на жестком 
	диске. У меня сортировка файла весом около 500 мб потребовала 5-7Гб доп. места и заняла несколько минут

Так же в ходе выполнения пользователю выводятся различные подсказки и уведомления, прим: если один или несколько параметров
для запуска указаны не верно или отсутсвуют, программа завершится выведя сообщение об этом и посказку по запуску; если один или
несколько исходных файлов несуществуют или недоступны, программа сообщит об этом, если есть еще хотя бы один исходный файл к 
которому удалось получить доступ, то работа продолжится, а недоступные файлы будут исключены из обработки; и т.д...

	Если выбран режим обработки int файлов (-i), то все строки содержащие любые символы кроме отрицательных и положительных
целых чисел будут проигнорированы, так же будут проигнорированы пустые строки и строки содержащие пробелы.
	Усли выбран режим обработки String файлов (-s), то будут проигнорированы пустые строки и строки содержащие пробелы


	- версия java 11.0.2;
	- использована система сборки maven 3.6.3
	- использована библиотека commons-io версии 2.11.0, для простого чтения файла построчно начиная с конца - в начало
		<groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.11.0</version>

